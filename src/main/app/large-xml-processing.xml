<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
   
    <spring:beans>
        <spring:bean id="groupIdParser" name="GroupIdParserBean" class="com.mulesoft.services.xml.xpath.XMLParser">
       			<spring:property name="xmlTagName" value="products"/>
                <spring:property name="xmlAttributeName" value="groupID"/>
        </spring:bean>
         <spring:bean id="saxSchemaValidationDefaultErrorHandler" name="SAXSchemaValidationDefaultErrorHandlerBean" class="com.mulesoft.services.xml.validation.SAXSchemaValidationDefaultErrorHandler"/>
    </spring:beans>
   
   
   
   
   
    <file:connector name="File" autoDelete="true" streaming="true" validateConnections="true" doc:name="File"/>
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" password="password" database="testDB" doc:name="MySQL Configuration"/>
    <flow name="large-xml-processingFlow">
        
        <file:inbound-endpoint path="/Users/ashleyosbourne/inbound" connector-ref="File" responseTimeout="10000" doc:name="read XML file" moveToDirectory="/Users/ashleyosbourne/outbound" moveToPattern="#[server.dateTime]-#[message.inboundProperties['originalFilename']]"> 
            <file:filename-regex-filter pattern="(.*).xml" caseSensitive="false"></file:filename-regex-filter>  
        </file:inbound-endpoint>
        <logger message="File received: #[message.id]" level="INFO" doc:name="File received"/>
        <set-variable variableName="filePath" value="#[flowVars['originalDirectory'] +&quot;/&quot; + flowVars['originalFilename']]" doc:name="Set filepath"/>
         <component doc:name="Get GroupID">  
           <spring-object bean="GroupIdParserBean"/>
        </component> 
 
        
           <component class="com.mulesoft.services.file.StreamCRC32" doc:name="Perform CRC32 Check"/>
  
         
          <message-filter throwOnUnaccepted="true" doc:name="Validate XML">
            <custom-filter class="com.mulesoft.services.xml.validation.SAXSchemaValidationFilter">
                <spring:property name="errorHandler" ref="saxSchemaValidationDefaultErrorHandler"/>
                <spring:property name="schemaLocation" value="xsd/Products.xsd"/>
            </custom-filter>
        </message-filter>
         
       <custom-transformer class="com.mulesoft.services.xml.chunking.XMLStreamingIteratorTransformer" doc:name="XML Streaming Iterator Transformer">
            <spring:property name="recordTagName" value="product"/>
        </custom-transformer>
        
          <batch:execute name="large-xml-processingBatch" doc:name="Batch Execute"/>
        <logger message="Finished" level="INFO" doc:name="Logger"/> 
<!--    <foreach doc:name="For Each"> -->
<!--             <component class="com.mulesoft.services.batch.BatchUnmarshal" doc:name="Java"/> -->
<!--         </foreach> -->

    </flow>
 <batch:job name="large-xml-processingBatch">
        <batch:threading-profile maxThreadsActive="5" poolExhaustedAction="RUN"/>
        <batch:input>
            <logger message="In batch input" level="INFO" doc:name="Logger"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step">
                <set-payload value="#[payload]" encoding="UTF-8" mimeType="application/xml" doc:name="Set Payload"/>
                <dw:transform-message metadata:id="566a128a-4594-4cf1-8c7c-9a46f1dfdcc7" doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://hoares.digital.batch/Products.xsd
---
{
    productDetails : {
        productNo : payload.ns0#product.ns0#productDetails.ns0#productNo,
    	transactionList : payload.ns0#product.ns0#transactions map $
}
}
]]></dw:set-payload>
                </dw:transform-message>
                 <enricher source="#[payload]" target="#[flowVars['productInsertResult']]" doc:name="Insert Product into DB">
                <db:insert config-ref="MySQL_Configuration" doc:name="Insert to DB">
                    <db:parameterized-query><![CDATA[INSERT INTO Products (ProductFullName) VALUES (#[payload.productDetails.productNo])]]></db:parameterized-query>
                </db:insert>
                </enricher>
                <set-payload value="#[payload.productDetails.transactionList]" doc:name="Prepare to insert transactions"/>
                 
                 <enricher source="#[payload]" target="#[flowVars['transactionInsert']]" doc:name="Insert Transactions into DB">
                 <db:insert config-ref="MySQL_Configuration" bulkMode="true" doc:name="Insert into transactions">
                        <db:parameterized-query><![CDATA[INSERT INTO Transactions (refID) VALUES (#[payload.refID])]]></db:parameterized-query>
                </db:insert>
                </enricher>
                
                
                
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger message="In batch complete" level="INFO" doc:name="Logger"/>
        </batch:on-complete>
    </batch:job>
</mule>
